name: Precomp NIFs

on:
  push:
    branches:
      - main
    paths:
      - "native/**"
      - ".github/workflows/release.yml"
    tags:
      - "*"
  pull_request:
    paths:
      - ".github/workflows/release.yml"
  workflow_dispatch:

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}

    permissions:
      contents: write
      id-token: write
      attestations: write

    strategy:
      fail-fast: false
      matrix:
        nif: ["2.15"]
        job:
          - { target: aarch64-apple-darwin, os: macos-13 }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-22.04, use-cross: true }
          - { target: aarch64-unknown-linux-musl, os: ubuntu-22.04, use-cross: true }
          - { target: x86_64-apple-darwin, os: macos-13 }
          - { target: x86_64-pc-windows-gnu, os: windows-2022 }
          - { target: x86_64-pc-windows-msvc, os: windows-2022 }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-22.04 }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-22.04, use-cross: true }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Extract project version
        shell: bash
        run: |
          version=$(grep -o '"[0-9][^"]*"' mix.exs | head -n1 | tr -d '"')
          echo "PROJECT_VERSION=$version" >> $GITHUB_ENV

      - name: Add target
        run: rustup target add ${{ matrix.job.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: native/dprint_markdown_formatter

      - name: Build the project
        id: build-crate
        uses: philss/rustler-precompiled-action@v1.1.4
        with:
          project-name: dprint_markdown_formatter
          project-version: ${{ env.PROJECT_VERSION }}
          target: ${{ matrix.job.target }}
          nif-version: ${{ matrix.nif }}
          use-cross: ${{ matrix.job.use-cross || false }}
          project-dir: native/dprint_markdown_formatter

      - name: Attest build provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: ${{ steps.build-crate.outputs.file-path }}

      - name: Artifact upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-crate.outputs.file-name }}
          path: ${{ steps.build-crate.outputs.file-path }}

      - name: Publish archives and packages
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.build-crate.outputs.file-path }}
        if: startsWith(github.ref, 'refs/tags/')