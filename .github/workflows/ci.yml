name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      otp-version: ${{ steps.setup-beam.outputs.otp-version }}
      elixir-version: ${{ steps.setup-beam.outputs.elixir-version }}
    steps:
      - uses: actions/checkout@v4

      - id: setup-beam
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: mix-${{ runner.os }}-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}

      - name: Install Dependencies
        run: mix deps.get

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}

      - name: Install Dependencies
        run: mix deps.get

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            native/dprint_markdown_formatter_nif/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: mix format --check-formatted

      - name: Check Rust formatting
        run: cd native/dprint_markdown_formatter_nif && cargo fmt --check

      - name: Check warnings
        run: mix compile --warnings-as-errors

      - name: Run Rust clippy
        run: cd native/dprint_markdown_formatter_nif && cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}

      - name: Install Dependencies
        run: mix deps.get

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            native/dprint_markdown_formatter_nif/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: mix test

  credo:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}

      - name: Install Dependencies
        run: mix deps.get

      - name: Run Credo
        run: mix credo --strict

  dialyzer:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}

      - name: Install Dependencies
        run: mix deps.get

      - uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-plt-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-${{ needs.setup.outputs.otp-version }}-${{ needs.setup.outputs.elixir-version }}

      - name: Run Dialyzer
        run: mix dialyzer --format github

  matrix-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: "1.18.3"
            otp: "27.2"
            warnings_as_errors: true
          - elixir: "1.17.3"
            otp: "27.2"
          - elixir: "1.17.3"
            otp: "26.2"
          - elixir: "1.16.3"
            otp: "26.2"
          - elixir: "1.16.3"
            otp: "25.3"
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: mix-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

      - name: Install Dependencies
        run: mix deps.get

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            native/dprint_markdown_formatter_nif/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Compile
        run: mix compile

      - name: Compile with warnings as errors
        if: ${{ matrix.warnings_as_errors == true }}
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test
